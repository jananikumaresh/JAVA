1
class BankAccount {
    private String accountNumber;
    private double balance;
    
    public BankAccount(String accountNumber, double balance){
        this.accountNumber=accountNumber;
        this.balance=balance;
    }
    
    
    public void deposit(double amount){
        balance+=amount;
    
    
    }
    
    public void withdraw(double amount){
        if (balance >= amount){
            balance -= amount;
        }else{
            System.out.println("Insufficient balance");
        }
    }
    
    
    public double getBalance() {
        
        return balance;
        
    }
}

class SavingsAccount extends BankAccount{
    
    public SavingsAccount(String accountNumber, double balance){
        
        super(accountNumber,balance);
        
    }
    
    
    @Override
    public void withdraw(double amount){
        
        if (getBalance() - amount < 100){
            
            System.out.println("Minimum balance of $100 required!");
        } else {
            
            super.withdraw(amount);
        }
    }
}

class prog {
    
    public static void main(String[] args){
        
        System.out.println("Create a Bank Account object (A/c No. BA1234) with initial balance of $500:");
        
        BankAccount BA1234 = new BankAccount("BA1234",500);
        
        System.out.println("Deposit $1000 into account BA1234:");
        
        BA1234.deposit(1000);
        
        System.out.println("New balance after depositing $1000: $"+BA1234.getBalance());
        
        
        
        
        
        System.out.println("Withdraw $600 from account BA1234:");
        
        BA1234.withdraw(600);
        
        
        System.out.println("New balance after withdrawing $600: $" + BA1234.getBalance());
        
        
        System.out.println("Create a SavingsAccount object (A/c No. SA1000) with initial balance of $300:");
        
        SavingsAccount SA1000 = new SavingsAccount("SA1000", 300);
        
        
        System.out.println("Try to withdraw $250 from SA1000!");
        
        SA1000.withdraw(250);
        
        System.out.println("Balance after trying to withdraw $250: $" + SA1000.getBalance());
        
    }
}

2
class College
{
protected   String collegeName;

public College(String collegeNameP) {
    // initialize the instance variables 
    collegeName= collegeNameP;
    
    }

public void admitted() {
    System.out.println("A student admitted in "+collegeName);
}
}
class Student extends College{

String studentName;
String depart;

public Student(String collegeNameP, String studentNameP,String departP) {
   // initialize the instance variables 
   super(collegeNameP);
   studentName=studentNameP;
   depart=departP;
   
   
}

public String toString(){
    // return the details of the student
    return "CollegeName : "+collegeName+"\nStudentName : "+studentName+"\nDepartment : "+depart ;
    
}
}
class prog {
public static void main (String[] args) {
        Student  s1 = new Student("REC","Venkatesh","CSE");
        s1.admitted();                               
        System.out.println(s1.toString()); 
}
}
3
class Mobile{
    public Mobile(){
        
        System.out.println("Basic Mobile is Manufactured");
    }
}
class CameraMobile extends Mobile{
    
    public CameraMobile(){
        System.out.println("Camera Mobile is Manufactured");
    }
    public void newFeature(){
        System.out.println("Camera Mobile with 5MG px");
    }
}

class AndroidMobile extends CameraMobile{
    public AndroidMobile(){
        System.out.println("Android Mobile is Manufactured");
    }
    void androidMobile(){
        System.out.println("Touch Screen Mobile is Manufactured");
    }
}

class prog{
    public static void main(String[] args){
        AndroidMobile o=new AndroidMobile();
        o.newFeature();
        o.androidMobile();
    }
}
    
